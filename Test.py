Pour chacune des quarante questions suivantes, donnez une note allant de 1 Ã  6 par rapport Ã  ce qui vous semble Ãªtre vrai pour vous. Plus le chiffre sera Ã©levÃ©, plus la phrase correspondra Ã  ce que vous ressentez.


import streamlit as st
import google.generativeai as genai

# Configure Gemini API with Streamlit Secrets
# This assumes you have the API keys stored in Streamlit secrets
# For example, in your Streamlit app's settings (Secrets section), you'd have:
# api_keys:
#   key1: "YOUR_API_KEY_1"
#   key2: "YOUR_API_KEY_2"
#   key3: "YOUR_API_KEY_3"
#   key4: "YOUR_API_KEY_4"
#   key5: "YOUR_API_KEY_5"


# List of 5 API keys
api_keys = [
    st.secrets["api_keys"]["key1"],
    st.secrets["api_keys"]["key2"],
    st.secrets["api_keys"]["key3"],
    st.secrets["api_keys"]["key4"],
    st.secrets["api_keys"]["key5"],
]

# Track the last used API key index
api_key_index = 0

# Function to set API key and configure the model in order
def configure_api_key():
    global api_key_index
    while api_key_index < len(api_keys):
        try:
            key = api_keys[api_key_index]  # Select the current API key
            genai.configure(api_key=key)
            model = genai.GenerativeModel('gemini-1.5-flash')  # Configure the model with the API key
            return model
        except Exception as e:
            st.error(f"Failed to configure API with key {key}: {e}")
            api_key_index += 1  # Move to the next API key
            continue
    # If all keys fail, show a message and return None
    st.error("Sorry, the service is temporarily unavailable. Please try again later.")
    return None  # If all keys fail

# Initialize the model using the first working API key
model = None

# Schein Career Anchors Test Questions
questions = [
    "RÃªves-tu dâ€™Ãªtre suffisamment spÃ©cialisÃ© dans ton mÃ©tier pour quâ€™on vienne en permanence te demander conseil ?",
    "Es-tu pleinement satisfait lorsque tu comprends comment tes collÃ¨gues fonctionnent et que tu utilises bien leurs qualitÃ©s ?",
    "RÃªves-tu dâ€™un mÃ©tier oÃ¹ tu organises ton travail comme tu lâ€™entends et oÃ¹ on ne compte pas ton temps de prÃ©sence au bureau ?",
    "PrÃ©fÃ¨res-tu un poste stable mÃªme si tu nâ€™as pas autant de libertÃ© et dâ€™indÃ©pendance que tu le souhaiterais ?",
    "Es-tu toujours Ã  la recherche dâ€™idÃ©es qui te permettraient de te mettre Ã  ton compte ?",
    "Les mÃ©tiers oÃ¹ tu rÃ©ussis le mieux sont-ils ceux oÃ¹ tu as lâ€™impression dâ€™aider les autres ?",
    "RÃªves-tu dâ€™une activitÃ© professionnelle oÃ¹ on te confierait des missions impossibles ou des challenges Ã  relever ?",
    "Sacrifierais-tu ta vie de famille pour une promotion ?",
    "Pour toi, rÃ©ussir dans la vie, est-ce avoir la possibilitÃ© de progresser rÃ©guliÃ¨rement pour devenir un spÃ©cialiste ?",
    "RÃªves-tu dâ€™un mÃ©tier qui te permette dâ€™avoir de lâ€™influence sur un grand nombre de personnes ?",
    "Aimes-tu les mÃ©tiers oÃ¹ tu peux tâ€™organiser comme tu lâ€™entends sans lâ€™aide de personne ?",
    "Si on te propose une mutation avec des responsabilitÃ©s difficiles, prÃ©fÃ¨res-tu refuser pour Ã©viter le risque dâ€™Ã©chouer ?",
    "Aimerais-tu mieux te mettre Ã  ton compte quâ€™Ãªtre salariÃ© dans une entreprise ?",
    "Ce que tu prÃ©fÃ¨res, est-ce rÃ©soudre un problÃ¨me difficile ?",
    "Lâ€™idÃ©al pour toi, est-ce de trouver un travail oÃ¹ tu puisses prÃ©server ta vie personnelle et familiale ?",
    "PrÃ©fÃ¨res-tu te spÃ©cialiser dans ton mÃ©tier plutÃ´t que de tâ€™Ã©loigner du terrain pour accÃ©der Ã  plus de responsabilitÃ©s ?",
    "Plus tu es indÃ©pendant dans ton travail, plus as-tu lâ€™impression dâ€™Ãªtre un professionnel ?",
    "Pour toi, le plus important est-il de trouver une sociÃ©tÃ© sÃ©curisante ?",
    "Es-tu pleinement heureux lorsque tu rÃ©ussis quelque chose qui tâ€™a demandÃ© un gros effort ?",
    "PrÃ©fÃ¨res-tu rester dans ton domaine de compÃ©tence plutÃ´t que dâ€™accepter un mÃ©tier nouveau ?",
    "Nâ€™aimes-tu pas les mÃ©tiers trop cadrÃ©s ?",
    "Ton seul but dans la vie est-il de crÃ©er toi-mÃªme quelque chose dont tu seras le maÃ®tre dâ€™Å“uvre ?",
    "Cherches-tu un travail oÃ¹ tu sois en permanence en compÃ©tition avec la concurrence ?",
    "Le plus important pour toi, est-ce ta famille et tes loisirs ? Refuses-tu les responsabilitÃ©s qui te demandent une trop grande disponibilitÃ© ?",
    "RÃªves-tu de te mettre Ã  ton compte ?"
]


# New page content
def new_page():

    st.image(r"Logo.png")
    st.markdown("""
       ### ðŸ“Š  DÃ©couvrez vos Ancres de CarriÃ¨re avec IFCAR Solutions
       Chez **IFCAR Solutions**, nous comprenons l'importance de connaÃ®tre vos motivations profondes et vos valeurs professionnelles. C'est pourquoi nous vous proposons un **test d'ancres de carriÃ¨re gratuit**, conÃ§u pour Ãªtre **intuitif**, **rapide**, et **perspicace**.

       ### ðŸš€ Pourquoi faire notre test ?

       - **Comprenez vos prioritÃ©s** : Identifiez les Ã©lÃ©ments essentiels Ã  votre Ã©panouissement professionnel.
       - **Alignez vos choix de carriÃ¨re** : Prenez des dÃ©cisions plus Ã©clairÃ©es en fonction de vos ancres.
       - **DÃ©veloppez votre potentiel** : Optimisez votre parcours en accord avec vos valeurs fondamentales.

       ### ðŸŽ¯ Pourquoi choisir IFCAR Solutions ?

       Forts de **12 ans d'expÃ©rience dans le recrutement**, nous aidons les individus Ã  trouver des carriÃ¨res qui leur correspondent vraiment. Notre test d'ancres de carriÃ¨re tÃ©moigne de notre engagement Ã  fournir des outils pertinents et efficaces pour une orientation professionnelle rÃ©ussie.

       ðŸ“Œ **Passez notre test d'ancres de carriÃ¨re dÃ¨s aujourd'hui** et prenez le contrÃ´le de votre avenir professionnel !
       """)

    # Add buttons linking to external resources
    st.markdown("---")  # Add a separator
    st.markdown("##### Ressources Utiles:")

    col1, col2, col3, col4 = st.columns(4)  # Create three columns

    with col1:
        st.link_button("Nos offres d'emploi", "https://ifcarjob.com/offres-demploi")

    with col2:
        st.link_button("Analyser vos CV", "https://cvanalyserapp.streamlit.app/")

    with col3:
        st.link_button("DÃ©posez vos CV", "mailto:cv@ifcarjob.com")

    with col4:
        st.link_button("Notre page Linkedin", "https://www.linkedin.com/company/ifcarsolutions/")


# Main application
def main():
    st.sidebar.title("Pages")
    page = st.sidebar.radio("Aller Ã ", ["Test d'orientation des carriÃ¨res", "Ã€ propos de nous"])

    if page == "Test d'orientation des carriÃ¨res":
        career_anchors_page()
    elif page == "Ã€ propos de nous":
        new_page()

def career_anchors_page():
    global model  # Declare that you're using the global model variable
    st.image(r"Logo.png")

    st.title("Test d'orientation des carriÃ¨res : Par IFCAR Solutions")

    # Initialize session state
    if 'responses' not in st.session_state:
        st.session_state['responses'] = {}

    # Collect user information
    name = st.text_input("Nom et PrÃ©nom *")

    if not name:
        st.warning("Veuillez remplir le champ du nom.")
        return

    # Collect responses
    for i, question in enumerate(questions):
        key = f"Q{i+1}"
        st.markdown(f"### {i+1}. {question}")  # Make questions bigger
        st.markdown("Pour chacune des questions suivantes, donnez une note allant de 1 Ã  6 par rapport Ã  ce qui vous semble Ãªtre vrai pour vous. Plus le chiffre sera Ã©levÃ©, plus la phrase correspondra Ã  ce que vous ressentez.")


        # Implement the radio buttons for 1 to 5 scale
        st.session_state['responses'][key] = st.radio(
            "SÃ©lectionnez votre rÃ©ponse:",
            options=['Pas du tout vrai', 'Pas vraiment', 'Neutre', 'En partie vrai', 'Tout Ã  fait vrai'],
            index=None,  # Default to the middle (3)
            horizontal=True,  # Ensures all options appear on the same line
            key=key
        )

    if st.button("Soumettre les rÃ©ponses"):
        # Prepare the prompt for Gemini
        prompt = f"Analysez les rÃ©ponses suivantes au test des ancres de carriÃ¨re de Schein pour Moi, qui s'appelle {name} :\n\n"
        for q, response in st.session_state['responses'].items():
            prompt += f"{q}: {response}\n"
        prompt += "\nFournissez une analyse dÃ©taillÃ©e des ancres de carriÃ¨re dominantes. Donnez une explication de chaque ancre en trois lignes maximum.\n"
        prompt += "Ensuite, proposez trois pistes de dÃ©veloppement professionnel sous forme de liste Ã  puces, adaptÃ©es Ã  ces ancres."
        prompt += "Limitez votre rÃ©ponse Ã  100 mots."


        # Send to Gemini API
        try:
            # Configure the model if it's not already configured (or has failed)
            if model is None:
                model = configure_api_key()

            if model is not None:  # only proceed if the model is configured
                response = model.generate_content(prompt)
                st.subheader("RÃ©sultats de l'analyse")
                st.write(response.text)
            else:
                st.error("Failed to configure the Gemini API after trying all available keys. Please check your secrets or try again later.")
        except Exception as e:
            st.error(f"Une erreur s'est produite lors de l'analyse: {e}")
            model = None  # Reset the model if there's an error, so it tries to reconfigure next time

        st.markdown("---")  # Add a separator
        st.markdown("##### Ressources Utiles:")

        col1, col2, col3, col4 = st.columns(4)  # Create three columns

        with col1:
            st.link_button("Nos offres d'emploi", "https://ifcarjob.com/offres-demploi")

        with col2:
            st.link_button("Analyser vos CV", "https://cvanalyserapp.streamlit.app/")

        with col3:
            st.link_button("DÃ©posez vos CV", "mailto:cv@ifcarjob.com")

        with col4:
            st.link_button("Notre page Linkedin", "https://www.linkedin.com/company/ifcarsolutions/")





if __name__ == "__main__":
    main()
